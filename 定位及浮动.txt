十.布局方式：
  1.定位	
1）静态定位：position:static（默认状态下的排列方法）       	
2）相对定位：position:relative
       规则：
		1、设置相对定位后元素移动，原来位置依然会被占据，移动位置是以参照物的左上角为基准。
		2、不会影响其他的元素。
		3、移动的参照物是，元素移动前所在的位置。
		设置方式：
		css相对应的选择器中书写
			position:relative;
			top:在原来位置向下移动（据上方的距离）
			left:在原来位置向右移动（据左边的距离）
			right:在原来位置向左移动（据右边的距离）
			bottom:在原来位置向上移动(据下方的距离)
                                值：可以为负数。。向相反方向移动
3）绝对定位position:absolute
		规则：设置绝对定位元素移动后，会把原先位置让出来
			1、当设置绝对定位后，如果【没有父容器】，参照物是【浏览器】
			2、当设置绝对定位后，如果有父容器，且父容器【没有被定位（为普通流）】，参照物是【浏览器】
			3、当设置绝对定位后，如果有父容器，且父容器【被定位（为相对|绝对）】，参照物【父容器】
				****重点注重两点：父容器和定位情况***
		设置方式：
			css相对应的选择器中书写
			position:absolute;
			top:据上方的距离
			left:据左边的距离
			right:据右边的距离
			bottom:据下方的距离 
4）固定定位：position:fixed 参照物只是浏览器.只对浏览器定位  被固定定位后的元素就算有父容器，也不会受到父容器的限制.
扩展属性css：z-index:数字值（没有单位） (设置了固定定位的元素就算有父容器也不会受到父容器的任何限制，不会受到任何的影响。只会以浏览器左上角为原点移动)  
     用法：两个都设置了定位(不论是何种定位)的盒子如果有重叠部分，都设置此属性，属性值大的盒子会压住属性值小的盒子




2.浮动float    浮动对块元素和行元素都有效果
流：在网页设计中指元素（标签）的排列方式
	1）标准流(未浮动)：一种默认的方式，自上而下依次排列。
    	2）非标准流（浮动）：某个元素脱离了标准流（本身的位置），就成为了非标准流
	规则：
		1、设置了浮动的元素，脱离普通流，拥有自己的浮动方式，会水平排列。(跳到前面的界面)
		2、会影响其他元素，也就是说其他元素会占据该元素的位置。
		3、当父容器放不下多个设置的浮动的元素时，元素会自动换行。
		4、当没有设置元素大小的时候，该元素会自适应内容大小，尽量减少自己所占得位置。
        块级元素浮动：
                1.浮动后的块级元素（非标准流）会认为没有浮动的块级元素（标准流）占据空间，会在本行找原点(浮动后的元素会定着不动)
                2.没有浮动的块级元素（标准流）会认为浮动后的块级元素（非标准流）不占据空间，会向上找原点(没有浮动的元素会往上顶)
        行级元素浮动：
                浮动后的行级元素会自动转为块级元素(注意：浮动的块级元素会对行级元素产生影响，行级元素会跟块级元素水平排列)
	属性：
		left：左浮动：元素从左至右排列
		right：右浮动：元素从右至左排列
		none：不浮动（默认值）
	/******************************/
	清除浮动：clear   不清除浮动的话以下的标准流会被浮动的元素遮盖。
				left:清除左浮动
				right:清除右浮动
				both:清除左右浮动(最常用)（元素清除浮动后也可以做左右浮动）
				none:不清除浮动
 
